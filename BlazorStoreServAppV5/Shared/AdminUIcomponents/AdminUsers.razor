@inherits MainLayout
@inject IOrderRepositoryServise OrderRepository
@inject IUserRepositoryService UserRepository

<div class="row">
    <div class="col">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"><button class="btn" @onclick='() => Change(NamesForHtml[0], PropBool[0])'>#</button></th>
                    <th scope="col"><button class="btn" @onclick='() => Change(NamesForHtml[1], PropBool[1])'>Date created</button></th>
                    <th scope="col"><button class="btn" @onclick='() => Change(NamesForHtml[2], PropBool[2])'>User's name</button></th>
                    <th scope="col"><button class="btn" @onclick='() => Change(NamesForHtml[3], PropBool[3])'>Is canceled?</button></th>
                    <th scope="col"><button class="btn" @onclick='() => Change(NamesForHtml[4], PropBool[4])'>Price</button></th>
                    <th scope="col"><button class="btn" @onclick='() => Change(NamesForHtml[1], PropBool[5])'>List of products</button></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in UsersList)
                {
                    <tr>
                        <th scope="row">@user.FirstName @user.LastName</th>
                        <td>@user.Address</td>
                        <td><button class="btn">@user.Phone</button></td>
                        <td>@user.Email</td>
                        <td>@user.Roles</td>
                        <td>
                            @foreach (var order in user.Orders)
                            {
                                <a href="">@order.Id, @order.CreateOrderDate </a>
                                @foreach (var product in order.Products)
                                {
                                    <a href="">@product.Name, </a>
                                }
                                <br/>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@code {
    [Parameter]
    public List<OrderModel> AdminsUsersList { get; set; }
    public Dictionary<string, bool> PropsBools { get; set; }
    public List<string> NamesForHtml { get; set; } = new List<string>
    {
        "Id", "CreateOrderDate", "User.FirstName", "IsFullfilled", "FullPrice"
    };
    [Parameter]
    public bool[] PropBool { get; set; } = new bool[OrderPropertyInfos.Count];
    void Change(string prop, bool propbool)
    {
        int i = 0;
        foreach (var item in OrderPropertyInfos)
        {
            if (item.Name == prop || "User." + typeof(Users).GetProperty("FirstName").Name == prop)
            {
                PropBool[i] = !PropBool[i];
            }
            i++;
        }
        IQueryable<Users> AllUsers = UsersList.AsQueryable();
        UsersList = AllUsers.OrderBy(prop, propbool).ToList();
    }

    [Parameter]
    public Type SelType { get; set; } = typeof(AdminUserInfo);

    [Parameter]
    public string CssClass { get; set; } = "nonvisible";

    public Users CurUsers;
    void changer(Users user)
    {
        if (CssClass == "nonvisible")
            CssClass = "visible";
        else
            CssClass = "nonvisible";
        CurUsers = user;
        StateHasChanged();
    }


}