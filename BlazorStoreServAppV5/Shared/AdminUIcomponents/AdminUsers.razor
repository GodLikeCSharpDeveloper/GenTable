@inherits MainLayout
@inject IOrderRepositoryServise OrderRepository
@inject IUserRepositoryService UserRepository

<div class="row cont">
    <div class="col">
        <table class=" tableAddCss">
            <thead class="brd">
            <tr>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[0], PropBool[0])">User's name'</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[1], PropBool[1])">Address</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[2], PropBool[2])">Phone number</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[3], PropBool[3])">Email</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[4], PropBool[4])">Price</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[1], PropBool[5])">List of orders</button>
                </th>
            </tr>
            </thead>
            <tbody >
            @foreach (var user in UsersList)
            {
                <tr>
                    <th scope="row">@user.FirstName @user.LastName</th>
                    <td>@user.Address</td>
                    <td>
                        <button class="btn">@user.Phone</button>
                    </td>
                    <td >@user.Email</td>
                    <td>@user.Roles</td>
                    <td style="text-align: start;">

                        <pre>
                        @foreach (var order in user.Orders)
                        {
                            <a  href="">№@order.Id, @order.CreateOrderDate @Space</a>
                            @foreach (var product in order.Products)
                            {
                                if (product != order.Products.Last())
                                {
                                    <a href="">@product.Name,</a>
                                }
                                else
                                {
                                    <a href="">@product.Name</a>
                                }
                            }

                            <br/>
                        }
                    </pre>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {
    private string Space = " ";

    [Parameter]
    public List<OrderModel> AdminsUsersList { get; set; }

    public Dictionary<string, bool> PropsBools { get; set; }

    public List<string> NamesForHtml { get; set; } = new()
    {
        "User.FirstName", "Address", "Phone", "Email", "Roles"
    };

    [Parameter]
    public bool[] PropBool { get; set; } = new bool[OrderPropertyInfos.Count];

    void Change(string prop, bool propbool)
    {
        var i = 0;
        foreach (var item in OrderPropertyInfos)
        {
            if (item.Name == prop || "User." + typeof(Users).GetProperty("FirstName").Name == prop)
            {
                PropBool[i] = !PropBool[i];
            }
            i++;
        }
        var AllUsers = UsersList.AsQueryable();
        UsersList = AllUsers.OrderBy(prop, propbool).ToList();
    }

    [Parameter]
    public Type SelType { get; set; } = typeof(AdminUserInfo);

    [Parameter]
    public string CssClass { get; set; } = "nonvisible";

    public Users CurUsers;

    void changer(Users user)
    {
        if (CssClass == "nonvisible")
            CssClass = "visible";
        else
            CssClass = "nonvisible";
        CurUsers = user;
        StateHasChanged();
    }


}