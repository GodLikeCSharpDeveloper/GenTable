@inherits AdminPanel
@inject IOrderRepositoryServise OrderRepository
@inject IUserRepositoryService UserRepositor

<AdminUserInfo Visible="@CssClass" MyUser="CurUsers"></AdminUserInfo>
<div class="row">
    <div class="col-12 component">
        <table class="table tableAddCss">
            <thead>
            <tr>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[0])">#</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[1])">Date created</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[2])">User's name</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[3])">Is canceled?</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[4])">Price</button>
                </th>
                <th scope="col">
                    <button class="btn" @onclick="() => Change(NamesForHtml[1])">List of products</button>
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var order in OrdersList)
            {
                <tr>
                    <th scope="row">@order.Id</th>
                    <td>@order.CreateOrderDate</td>
                    <td>
                        <button class="btn" @onclick="@(() => changer(order.User))">@order.User.FirstName @order.User.LastName</button>
                    </td>
                    <td>@order.IsFullfilled</td>
                    <td>@order.FullPrice</td>
                    <td>
                        @foreach (var prod in order.Products)
                        {
                            <a href="">@prod.Name, </a>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {

    [Parameter]
    public List<OrderModel> AdminsOrders { get; set; }

    public Dictionary<string, bool> PropsBools { get; set; }

    public List<string> NamesForHtml { get; set; } = new()
    {
        "Id", "CreateOrderDate", "User.FirstName", "IsFullfilled", "FullPrice"
    };
    void Change(string prop)
    {
        var OrderedOrder = OrdersList.AsQueryable();
        if (OrdersList.SequenceEqual(OrderedOrder.OrderBy(prop, true).ToList()))
        {
            OrdersList = OrderedOrder.OrderBy(prop, false).ToList();
        }
        else
            OrdersList = OrderedOrder.OrderBy(prop, true).ToList();
    }

    [Parameter]
    public Type SelType { get; set; } = typeof(AdminUserInfo);

    [Parameter]
    public string CssClass { get; set; } = "nonvisible";

    public Users CurUsers;

    void changer(Users user)
    {
        if (CssClass == "nonvisible")
            CssClass = "visible";
        else
            CssClass = "nonvisible";
        CurUsers = user;
        StateHasChanged();
    }
    } 